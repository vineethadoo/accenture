1)Difference between ‘this’ and ‘let’ and when to use what, explain with examples.
Answers: 
let message =() =>
{
    console.log('Hello');
}
setTimout(message,3000);
 1)variable  declared  with let have  a block-scope.
 2) let doesn’t get Hoisted 
3) let was introduce in ES6;
“this”  This  is the Current Object Inside  the function .If we call “ this” window object
let car =  function(color)
{
  this.color = color;
}
car.prototype.getColor = function()
{
    return this.color;
}
let aa = new car('red');
console.log(aa)


2.Write a function which accepts an array of strings and returns a map of character to count of the character(including spaces and special characters).
Eg: input: [‘hello world’, ‘hello world’]  output: {h: 2, e: 2, l: 6, ‘ ‘: 1, o: 4 …… }

function strArrInput(arrStr){
  let obj = {};
  let chrStr = [];

  str = arrStr.join("");
  chrStr = str.split("")
   chrStr.sort()
  chrStr.forEach((el) =>{
    return obj[el] = (obj[el] || 0) + 1
  });
  
  return obj;
};

console.log(strArrInput(["hello world", "hello world"]))




3)
Write a function to return all the keys present in an object at any level.
Eg: input: {  a: 5, b: { c: { d: 10 } }}   output: [a, b, c, d]

var object = {  a: 5, b: { c: { d: 10 } }}  
function getKeys(obj, arr) {
  Object.keys(obj).forEach(function(key) {
    arr.push(key);
    arr = getKeys(obj[key], arr);
  });
  return arr;
}

console.log(getKeys(object, []));	

4.       Write a function to reverse every word of a string.

·         Using split and reverse

·         Without using split and reverse and in O(1) space (since strings are immutable, assume that the input is a character array).

one method
function ReverseString(str) { 
   return str.split('').reverse().join('') 
}
   console.log(ReverseString('vineeth'));
   
   
another Method:

function reverse(s) {
  var result = '';
  for (var i = s.length - 1; i >= 0; i--)
    result += s[i];
  return result;
}

console.log(reverse('vineeth'));
   


5.Write a function to remove duplicate strings from an array of strings.
One  method
 const  array =[1,2,3,4,5,5,5,6,6,6]
console.log([...new Set(array)]);
 another method 
const  array =[1,2,3,4,5,5,5,6,6,6]
array.filter((item,index) => array.indexOf(item) === index)






